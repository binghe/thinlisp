;;;; Module tl/c/packages.c

;;; Copyright (c) 2001 The Thinlisp Group All Rights Reserved.

;;; Translation data for tl/lisp/packages.lisp.
;;; The following is the value of the trans-data-tlt-version parameter.
2

(make-trans-data
  ;; Used quoted symbols = (symbol symbol-array . index).
  '((:DOWNCASE "tl_format_symbols" . 1)
    (:UPCASE "tl_format_symbols" . 0))
  ;; Name for this file's array of quoted symbols.
  "tl_packages_symbols"
  ;; Quoted symbols defined in this file.
  `(:INHERITED
    :EXTERNAL
    :INTERNAL)
  ;; Used compiled-functions = (name func-array . index).
  NIL
  ;; Name for this file's array of compiled-functions.
  NIL
  ;; Compiled-function objects defined in this file.
  NIL
  ;; Used function type signatures.
  '((TL::ERROR-ONE-ARG "error_one_arg" FUNCTION (T T) NULL)
    (TL::ERROR-THREE-ARGS "error_three_args" FUNCTION (T T T T) NULL)
    (TL::ERROR-TWO-ARGS "error_two_args" FUNCTION (T T T) NULL)
    (TL::FORMAT-FUNCTION "format_function" FUNCTION (T STRING T) T)
    (TL::GET-STRING-OR-FILE-STREAM-FOR-OUTPUT "get_string_or_file_stream_for_output" FUNCTION (T FIXNUM) T)
    (TL::STRING-UPCASE-FUNCTION "string_upcase_function" FUNCTION (STRING FIXNUM T) STRING)
    (TL::WRITE-STRING-FUNCTION "write_string_function" FUNCTION (STRING T FIXNUM T) STRING))
  ;; Defined functions.
  '((TL::EXPORT . "export")
    (TL::FIND-PACKAGE-1 . "find_package_1")
    (TL::FIND-PACKAGE-OR-ERROR-1 . "find_package_or_error_1")
    (TL::FIND-SYMBOL-IN-PACKAGE . "find_symbol_in_package")
    (TL::FIND-SYMBOL-IN-SINGLE-PACKAGE . "find_symbol_in_single_package")
    (TL::IMPORT . "import")
    (INIT-SYMBOL . "init_symbol")
    (INIT-SYMBOL-INTO-PACKAGE . "init_symbol_into_package")
    (TL::INSERT-SYMBOL-INTO-PACKAGE . "insert_symbol_into_package")
    (TL::INTERN-STRING-IN-PACKAGE . "intern_string_in_package")
    (TL:LIST-ALL-PACKAGES . "list_all_packages")
    (TL::MAKE-GENSYMED-SYMBOL . "make_gensymed_symbol")
    (TL::MAKE-PACKAGE-1 . "make_package_1")
    (TL:SXHASH-STRING . "sxhash_string")
    (TL::WRITE-SYMBOL . "write_symbol"))
  ;; Used variables = (symbol c-name . type).
  '((*PRINT-ESCAPE* "Sprint_escapeS" . OBJ)
    (*STANDARD-OUTPUT* "Sstandard_outputS" . OBJ)
    (*TERMINAL-IO* "Sterminal_ioS" . OBJ)
    (CURRENT-REGION "current_region" . OBJ))
  ;; Defined variables
  '((TL:*GENSYM-COUNTER* . "Sgensym_counterS")
    (TL::*KEYWORD-PACKAGE* . "Skeyword_packageS")
    (*PACKAGE* . "SpackageS")
    (TL::ALL-PACKAGES . "all_packages"))
  ;; Used class typedefs.
  NIL
  )
