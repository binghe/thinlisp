;;;; Module tl/c/format.c

;;; Copyright (c) 2001 The Thinlisp Group All Rights Reserved.

;;; Translation data for tl/lisp/format.lisp.
;;; The following is the value of the trans-data-tlt-version parameter.
2

(make-trans-data
  ;; Used quoted symbols = (symbol symbol-array . index).
  NIL
  ;; Name for this file's array of quoted symbols.
  "tl_format_symbols"
  ;; Quoted symbols defined in this file.
  `(:UPCASE
    :DOWNCASE
    :CAPITALIZE
    :CAP-FIRST-LOWER-REST)
  ;; Used compiled-functions = (name func-array . index).
  '((TL::WRITE-SYMBOL "tl_format_funcs" . 0))
  ;; Name for this file's array of compiled-functions.
  "tl_format_funcs"
  ;; Compiled-function objects defined in this file.
  `(TL::WRITE-SYMBOL)
  ;; Used function type signatures.
  '((TL::FIND-PACKAGE-1 "find_package_1" FUNCTION (T) T)
    (TL:LAST "last" FUNCTION (LIST) LIST)
    (TL::WRITE-SYMBOL "write_symbol" FUNCTION (SYMBOL T T) VOID))
  ;; Defined functions.
  '((TL::ALLOC-FIELD-WIDTH-STRING . "alloc_field_width_string")
    (TL::BAD-CONTROL-DIRECTIVE-ERROR . "bad_control_directive_error")
    (TL::BAD-STREAM-ERROR . "bad_stream_error")
    (TL:CHAR-NAME . "char_name")
    (TL::CHECK-MAKE-ARRAY-DIMENSIONS . "check_make_array_dimensions")
    (TL::COPY-STRING . "copy_string")
    (TL::DISCARD-FORMAT-ARGLIST . "discard_format_arglist")
    (TL::ERROR-ONE-ARG . "error_one_arg")
    (TL::ERROR-THREE-ARGS . "error_three_args")
    (TL::ERROR-TWO-ARGS . "error_two_args")
    (TL::FIND-END-OF-CONDITIONAL . "find_end_of_conditional")
    (TL:FORCE-OUTPUT . "force_output")
    (TL::FORMAT-ERROR . "format_error")
    (TL::FORMAT-FUNCTION . "format_function")
    (TL::GET-LAST-STRING-STREAM-CHARACTER . "get_last_string_stream_character")
    (TL:GET-OUTPUT-STREAM-STRING . "get_output_stream_string")
    (TL::GET-STRING-OR-FILE-STREAM-FOR-OUTPUT . "get_string_or_file_stream_for_output")
    (TL::LAST-STREAM-CHAR? . "last_stream_charP")
    (TL::LAST-STRING-CHAR? . "last_string_charP")
    (TL::NOT-NULL-DESTRUCTURING-ERROR-1 . "not_null_destructuring_error_1")
    (TL::NSTRING-CAPITALIZE-FUNCTION . "nstring_capitalize_function")
    (TL::NSTRING-DOWNCASE-FUNCTION . "nstring_downcase_function")
    (TL::NSTRING-UPCASE-FUNCTION . "nstring_upcase_function")
    (TL::PM-PRINT . "pm_print")
    (TL:PRIN1 . "prin1")
    (TL:PRINC . "princ")
    (TL:PRINT . "print")
    (TL::PRINT-RANDOM-OBJECT-WITH-TYPE-NAME . "print_random_object_with_type_name")
    (TL::STRING-DOWNCASE-FUNCTION . "string_downcase_function")
    (TL::STRING-UPCASE-FUNCTION . "string_upcase_function")
    (TL:TERPRI . "terpri")
    (TL::UNSUPPORTED-CONTROL-CHAR-ERROR . "unsupported_control_char_error")
    (TL:WRITE-CHAR . "write_char")
    (TL::WRITE-FIXNUM . "write_fixnum")
    (TL::WRITE-FIXNUM-IN-ARBITRARY-BASE . "write_fixnum_in_arbitrary_base")
    (TL::WRITE-FIXNUM-IN-HEX . "write_fixnum_in_hex")
    (TL::WRITE-FIXNUM-WITH-ARGLIST . "write_fixnum_with_arglist")
    (TL::WRITE-FIXNUM-WITH-COMMAS . "write_fixnum_with_commas")
    (TL::WRITE-FUNCTION . "write_function")
    (TL::WRITE-LINE-FUNCTION . "write_line_function")
    (TL::WRITE-LIST . "write_list")
    (TL::WRITE-STRING-FUNCTION . "write_string_function")
    (TL::WRITE-WITH-ARGLIST . "write_with_arglist"))
  ;; Used variables = (symbol c-name . type).
  '((*PACKAGE* "SpackageS" . OBJ)
    (CURRENT-REGION "current_region" . OBJ))
  ;; Defined variables
  '((*DEBUG-IO* . "Sdebug_ioS")
    (*ERROR-OUTPUT* . "Serror_outputS")
    (*PRINT-BASE* . "Sprint_baseS")
    (*PRINT-CASE* . "Sprint_caseS")
    (*PRINT-CIRCLE* . "Sprint_circleS")
    (*PRINT-ESCAPE* . "Sprint_escapeS")
    (*PRINT-LENGTH* . "Sprint_lengthS")
    (*PRINT-LEVEL* . "Sprint_levelS")
    (*PRINT-PRETTY* . "Sprint_prettyS")
    (*QUERY-IO* . "Squery_ioS")
    (*STANDARD-INPUT* . "Sstandard_inputS")
    (*STANDARD-OUTPUT* . "Sstandard_outputS")
    (*TERMINAL-IO* . "Sterminal_ioS")
    (*TRACE-OUTPUT* . "Strace_outputS")
    (TL::DEFAULT-STRING-STREAM-SIZE . "default_string_stream_size")
    (TL::FIELD-WIDTH-STRING-LENGTH . "field_width_string_length")
    (TL::FIELD-WIDTH-STRING-LIST . "field_width_string_list")
    (TL::REVERSED-FIXNUM-WITH-COMMAS-STRING . "reversed_fixnum_with_commas_string"))
  ;; Used class typedefs.
  NIL
  )
